#!/usr/bin/env python3

# This code was generated by GitHub Copilot.
# Prompt: "Create a Python script that receives inputs like state, and servicename. 
# The script should print the provided parameters in a single line. If a parameter is not provided, indicate that the value was not provided. 
# The script should set the exit code based on the value of the state parameter: 
# OK -> exit code 0, WARN -> exit code 1, CRIT -> exit code 2, UNK -> exit code 3. The output should be in the format: 
# "My 1st service" - This static service is always OK, where the current output should be placed in the location of 'This static service is always OK' 
# and the status code should be added at the beginning of the output. Include a help argument with usage examples."

import sys
import getopt

def usage():
    print(f"""Usage: {os.path.basename(__file__)} [-h|--help] [-s|--state state] [-n|--servicename servicename]

    state           : State of the check (OK, WARN, CRIT, UNK); default: OK
    servicename     : Name of the service; default: "Extension Starter Pack by Paulo Santana - Active Check"

    Examples:
    1. python {os.path.basename(__file__)} -s OK -n "Service Check"
    2. python {os.path.basename(__file__)} -s WARN -n "Another Service"
    3. python {os.path.basename(__file__)} -s CRIT -n "Critical Service"
    """)
    sys.exit(3)

def main(argv):
    state = 'OK'
    servicename = "Extension Starter Pack by Paulo Santana - Active Check"

    try:
        opts, args = getopt.getopt(argv, "hs:n:", ["help", "state=", "servicename="])
    except getopt.GetoptError:
        usage()

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
        elif opt in ("-s", "--state"):
            state = arg
        elif opt in ("-n", "--servicename"):
            servicename = arg

    if state == 'OK':
        status_code = 0
    elif state == 'WARN':
        status_code = 1
    elif state == 'CRIT':
        status_code = 2
    elif state == 'UNK':
        status_code = 3
    else:
        print("Invalid state provided. Valid states are: OK, WARN, CRIT, UNK.")
        sys.exit(3)

    print(f'State: {state}')

    sys.exit(status_code)

if __name__ == "__main__":
    main(sys.argv[1:])
