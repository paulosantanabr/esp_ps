#!/usr/bin/env python3

# This code was generated by GitHub Copilot.
# Prompt: "Create a Python script that receives inputs like username, password, and servicename.
# The script should print the provided parameters in a single line. If a parameter is not provided, indicate that the value was not provided.
# The script should set the exit code based on the value of the username parameter:
# If username is provided -> exit code 0, otherwise -> exit code 1. The output should be in the format:
# "My 1st service" - This static service is always OK, where the current output should be placed in the location of 'This static service is always OK'
# and the status code should be added at the beginning of the output. Include a help argument with usage examples."

import sys
import getopt

def usage():
    print(f"""Usage: {os.path.basename(__file__)} [-h|--help] [-u|--username username] [-p|--password password]

    username        : Username for the service; default: not provided
    password        : Password for the service; default: not provided

    Examples:
    1. python {os.path.basename(__file__)} -u user1 -p pass1
    2. python {os.path.basename(__file__)} -u user2 -p pass2
    3. python {os.path.basename(__file__)} -u user3 -p pass3
    """)
    sys.exit(0)  # Default return code when usage is called

def main(argv):
    username = None
    password = None

    try:
        opts, args = getopt.getopt(argv, "hu:p:", ["help", "username=", "password="])
    except getopt.GetoptError:
        usage()

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
        elif opt in ("-u", "--username"):
            username = arg
        elif opt in ("-p", "--password"):
            password = arg

    print(f'Username: {username if username else "not provided"}, Password: {password if password else "not provided"}')

    sys.exit(0)  # Always return 0

if __name__ == "__main__":
    main(sys.argv[1:])
